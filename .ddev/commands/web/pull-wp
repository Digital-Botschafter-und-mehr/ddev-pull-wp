#!/bin/bash

## Description: Migrate a remote website to a local DDEV
## Usage: pull-wp
## Example: "pull-wp sshuser@host.xyz /html/wordpress"
## (No trailing slash!)

if [ -z "$1" ]
  then
    echo "Please provide sshuser@sshost.xyz information. :-)"
    exit 1
  else
    SSH_USER_HOST="${1}"
fi

if [ -z "$2" ]
  then
    echo "Please provide path to remote wordpress information. :-)"
    exit 1
  else
    SSH_WORDPRESS_PATH="${2}"
fi

if [ -d '/var/www/html/wordpress/wp-admin/' ]
then 
  echo "Wordpress installation found, please clean/reset it before a new installation with ddev delete-wp"
  exit 2;
fi

# get remote wordpress version, save it as var
WP_CORE_VERSION_LIVE_WEBSITE=`ssh ${SSH_USER_HOST} wp core version --path=${SSH_WORDPRESS_PATH}`
echo "Live website has version: ${WP_CORE_VERSION_LIVE_WEBSITE}"

# downgrade current ddev site to that wp version
wp core update --version=${WP_CORE_VERSION_LIVE_WEBSITE} --force --path=${DDEV_DOCROOT}
# TODO: more commands needed?

# TODO: Implement this!
exit 1;

# rsync updraft backup to local temp folder
mkdir -p /tmp/updraft
echo "Sync backup files from remote server to local server"
# TODO: only the newest, only with a specific nonce in it?
rsync -avzh ${SSH_USER_HOST}:${SSH_WORDPRESS_PATH}/wp-content/updraft/ /tmp/updraft/

# TODO: use WP CLI and Migrator:

# get latest nonce? via wp updraftplus get_latest_full_backup ? 
UPDRAFT_NONCE=`wp updraftplus get_latest_full_backup --path=${DDEV_DOCROOT}`
echo "Got nonce from updraft: ${WP_CORE_VERSION_LIVE_WEBSITE}"

# run restore process
echo "Start restore with --migration flag turned on..."
wp updraftplus restore ${UPDRAFT_NONCE} --migration --path=${DDEV_DOCROOT}

echo "Restore ended, have fun!
